p1<- ggplot(data =rmOutlier.DMS, aes (x= finalDischarge, y = microAbMl)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
p1
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
View(lm_eqn)
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
View(lm_eqn)
View(lm_eqn)
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(microAbMl) == a + b %.% italic(finalDischarge)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
a<-fit$coefficients[1]
b<-fit$coefficients[2]
p1<- ggplot(data =rmOutlier.DMS, aes (x= finalDischarge, y = microAbMl)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
p1
#linear regression equation code
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(microAbMl) == a + b %.% italic(finalDischarge)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
dsc.combo.all<- dsc.combo.all %>%
mutate(logDischarge = log10(finalDischarge))
View(dsc.combo.all)
LogDSCmic<- dsc.combo.all %>%
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
LogDSCmic
p1
ogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
#stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
LogDSCmic
CUPEMxPplot +
geom_line(aes(y= dailyRain), color = "red")+
geom_point()+
scale_y_continuous(breaks = seq(0,8,1),
name="Microbial Abundance per mL",
sec.axis = sec_axis( trans = ~. /2,
breaks = seq(0,60,10),
name = "Precipitation (mm)"
)
) +
theme(axis.title.y.left = element_text(color= "blue"),
axis.title.y.right = element_text(color= "red"))
fit<-lm(log10(filteredGUILRainMicrobe$dailyRain)~log10(filteredGUILRainMicrobe$microAbMl))
CUPEplot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x)
TNlinerPlot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x, scale = "free")
TNlinerPlot
View(dsc.combo.all)
View(ShortAbundanceDF)
View(short.dsc)
short.dsc$date<- as.Date((short.dsc$collectDate), format ="%d-%b-%Y")
#create df only of discharge and microbes.
dsc.microbes<- merge(ShortAbundanceDF, short.dsc, by= date , all =TRUE)
#create df only of discharge and microbes.
dsc.microbes<- left_join(ShortAbundanceDF, short.dsc, by= date )
#create df only of discharge and microbes.
dsc.microbes<- left_join(ShortAbundanceDF, short.dsc, by= "date" )
View(dsc.microbes)
#create df only of discharge and microbes.
dsc.microbes<- inner.join(ShortAbundanceDF, short.dsc, by= "date" )
#create df only of discharge and microbes.
dsc.microbes<- merge(ShortAbundanceDF, short.dsc, by= "date" )
View(dsc.microbes)
plot(microAbMl~finalDischarge, data= dsc.microbes, pch=16)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<3000000,]
lm(microAbMl~finalDischarge, data= dsc.microbes)
mod<- lm(microAbMl~finalDischarge, data= dsc.microbes)
summary(mod)
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
summary(fit)
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= dsc.microbes, pch=16)
abline(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<2000000,]
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<2000000,]
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<20000,]
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<200000,]
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
<<<<<<< Updated upstream
View(swc.lab)
sum(swc.lab$analyte)
summary(swc.lab$analyte)
names(swc.lab$analyte)
str(swc.lab$analyte)
list<- str(swc.lab$analyte)
analytesType<- length(swc.lab$analyte)
categories<- unique(swc.lab$analyte)
typeofAnalyte<- length(categories)
print(categories)
=======
library(tidyverse)
library(ggplot2)
library(neonUtilities)
library(tidyr)
library(dplyr)
library(lubridate)
library(stringr)
library(stats)
library(neonOS)
library(plotly)
library(neonOS)
library(gridExtra)
MicroAbundance%>%
ggplot(aes(x=continuousDischarge,y=microAbMl))+
geom_point()+
scale_y_log10()+
scale_x_log10()+
geom_smooth(method="gam")+
facet_wrap(~siteID,
scales = "free")
dsc <- neonUtilities::loadByProduct(
dpID = "DP4.00130.001",
site = c("CUPE","GUIL"),
startdate = "2017-01",
enddate = "2023-04",
check.size = F,
release = "LATEST",
include.provisional = T,
token = Sys.getenv("NEON_PAT"),
nCores = 7
)
if(dir.exists("C:/Users/nickerson/")){
token <- read.csv("~/APItoken.txt",encoding = "UTF-8",header = T,sep = "\t")
NEONportal_APItoken <- token$APItoken[token$site=="NEONportal_internal"]
Sys.setenv(NEON_PAT=NEONportal_APItoken)
# test install from dev branch
devtools::install_github("NEONScience/restR2@dev")
library(restR2)
my_dat <- restR2::get.os.l0.data(
stringSearch = "fulcrumID:ea0859da-9b0f-4916-b86d-4174a1500a7d",
format_for_L0_editor = TRUE)
library(tidyverse)
library(devtools)
Sys.getenv("FULCRUM_TOKEN")
#restR2_token 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
devtools::install_local('C:/Users/mviggiano/Documents/Github/restR2')
install.packages("restR2")
library(restR2)
my_dat <- restR2::get.os.l0.data(
stringSearch = "fulcrumID:ea0859da-9b0f-4916-b86d-4174a1500a7d",
format_for_L0_editor = TRUE)
dsc <- neonUtilities::loadByProduct(
dpID = "DP4.00130.001",
site = c("CUPE","GUIL"),
startdate = "2017-01",
enddate = "2023-04",
check.size = F,
release = "LATEST",
include.provisional = T,
token = Sys.getenv("NEON_PAT"),
nCores = 7
)
Sys.getenv("FULCRUM_TOKEN")
dsc <- neonUtilities::loadByProduct(
dpID = "DP4.00130.001",
site = c("CUPE","GUIL"),
startdate = "2017-01",
enddate = "2023-04",
check.size = F,
release = "LATEST",
include.provisional = T,
token = Sys.getenv("NEON_PAT"),
nCores = 7
csd_continuousDischarge <- dsc$csd_continuousDischarge
dsc <- neonUtilities::loadByProduct(
dpID = "DP4.00130.001",
site = c("CUPE","GUIL"),
startdate = "2017-01",
enddate = "2023-04",
check.size = F,
release = "LATEST",
include.provisional = T,
token = Sys.getenv("NEON_PAT"),
nCores = 7
)
if(dir.exists("C:/Users/mviggiano/")){
token <- read.csv("~/APItoken.txt",encoding = "UTF-8",header = T,sep = "\t")
NEONportal_APItoken <- token$APItoken[token$site=="NEONportal_internal"]
Sys.setenv(NEON_PAT=NEONportal_APItoken)
}
library(tidyverse)
library(ggplot2)
library(neonUtilities)
library(tidyr)
library(dplyr)
library(lubridate)
library(stringr)
library(stats)
library(neonOS)
library(plotly)
library(neonOS)
library(gridExtra)
if(dir.exists("C:/Users/mviggiano/")){
token <- read.csv("~/APItoken.txt",encoding = "UTF-8",header = T,sep = "\t")
NEONportal_APItoken <- token$APItoken[token$site=="NEONportal_internal"]
Sys.setenv(NEON_PAT=NEONportal_APItoken)
}
load("~/Github/Mvviggi/swc.cell.dsc/DSC.Rain.SWC.AMC.RData")
MicAb.CUPE<- CUPEmicrobe %>%
ggplot(aes(x=Month, y= log10Abundance))+
geom_point(size =4)+
geom_smooth(size=1) +
facet_wrap(~Year, nrow = 2, scale = "free")
# scale_x_date(date_breaks = "1 month",
#              date_labels = "%b-%Y") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "CUPE Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.CUPE + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=Month, y= microAbMl, color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
facet_wrap(~siteID, nrows = 2, scale = "free")
View(ShortAbundanceDF)
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= microAbMl, color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
facet_wrap(~siteID, nrows = 2, scale = "free")
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= microAbMl, color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
facet_wrap(~siteID, nrow = 2, scale = "free")
MicAbund.years +
labs(title = "Microbial Abundance per mL per month from 2017 to 2022")+
theme(plot.title = element_text(hjust =0.5),
axis.text.x = element_text(hjust = 1, size= 14),
axis.text.y = element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
View(rmOutlier.DMS)
MicAb.CUPE<- CUPEmicrobe %>%
ggplot(aes(x=Month, y= log10Abundance))+
geom_point(size =4)+
geom_smooth(size=1) +
facet_wrap(~Year, nrow = 2, scale = "free")
# scale_x_date(date_breaks = "1 month",
#              date_labels = "%b-%Y") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "CUPE Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.CUPE + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.GUIL + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.GUIL + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%B-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.GUIL + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%m-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.GUIL + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5), size= 14)
MicAb.GUIL + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.CUPE<- CUPEmicrobe %>%
ggplot(aes(x=date, y= log10Abundance))+
geom_point(size =4)+
geom_smooth(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
facet_wrap(~Year, nrow = 2, scale = "free")
# scale_x_date(date_breaks = "1 month",
#              date_labels = "%b-%Y") +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(title = "CUPE Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5))
MicAb.CUPE + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.CUPE<- CUPEmicrobe %>%
filter(siteID == c("CUPE"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "CUPE Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5), size= 14)
MicAb.CUPE + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAb.CUPE + theme(axis.text=element_text(size = 10),
axis.title=element_text(size=16))
MicAb.CUPE + theme(axis.text.x = element_text(hjust = 1, size= 12),
axis.title=element_text(size=16))
MicAb.CUPE + theme(axis.text.x = element_text(hjust = 1, size= 9),
axis.title=element_text(size=16))
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5), size= 14)
MicAb.GUIL + (axis.text.x = element_text(hjust = 1, size= 9),
MicAb.GUIL<- GUILmicrobe %>%
filter(siteID == c("GUIL"))%>%
ggplot(aes(x=date, y= log10Abundance, color= Year, group = Year))+
geom_point(size =4)+
geom_line(size=1) +
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "GUIL Microbial abundance over time")+
theme(plot.title = element_text(hjust =0.5), size= 14)
MicAb.GUIL + theme(axis.text.x = element_text(hjust = 1, size= 9),
axis.title=element_text(size=16))
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= log10Abundance,
color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
facet_wrap(~siteID, nrow = 2, scale = "free") +
labs(title = "Microbial Abundance per mL per month from 2017 to 2022")+
theme(plot.title = element_text(hjust =0.5),
axis.text.x = element_text(hjust = 1, size= 10),
axis.text.y = element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
MicAbund.years + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= log10Abundance,
color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y")+
facet_wrap(~siteID, nrow = 2, scale = "free") +
labs(title = "Microbial Abundance per mL per month from 2017 to 2022")+
theme(plot.title = element_text(hjust =0.5),
axis.text.x = element_text(hjust = 1, size= 10),
axis.text.y = element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
MicAbund.years + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= log10Abundance,
color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y")+
facet_wrap(~siteID, nrow = 2, scale = "free") +
labs(title = "Microbial Abundance per mL per month from 2017 to 2022")+
theme(plot.title = element_text(hjust =0.5),
axis.text.x = element_text(angle = 45, hjust = 1, size= 9),
axis.text.y = element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
MicAbund.years + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
MicAbund.years <-ggplot(data = ShortAbundanceDF, aes(x=date, y= log10Abundance,
color= Year, group = Year))+
geom_point(size =3)+
geom_line(size=1) +
theme(axis.text.x = element_text(hjust = 1))+
scale_x_date(date_breaks = "1 month",
date_labels = "%b-%y")+
facet_wrap(~siteID, nrow = 2, scale = "free_y") +
labs(title = "Microbial Abundance per mL per month from 2017 to 2022")+
theme(plot.title = element_text(hjust =0.5),
axis.text.x = element_text(angle = 45, hjust = 1, size= 9),
axis.text.y = element_text(size= 14),
axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14))
MicAbund.years + theme(axis.text=element_text(size = 12),
axis.title=element_text(size=16))
>>>>>>> Stashed changes
