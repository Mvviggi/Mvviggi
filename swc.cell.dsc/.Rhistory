setwd(":C/mviggiano/Documents/GitHub/Inverts.Sediments.pH")
getwd()
library(ggplot2)
library(tidyverse)
library(neonOS)
library(neonUtilities)
library(neonOS)
library(vegan)
library(dplyr)
library(ggplot2)
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= dailyRain, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red")+
facet_wrap(~Year, scale = "free")
CUPEDailylogAb_corr
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= dailyRain, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula 'y~x')+
facet_wrap(~Year, scale = "free")
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= dailyRain, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = 'y~x')+
facet_wrap(~Year, scale = "free")
CUPEDailylogAb_corr
View(filteredCUPERainMicrobe)
filteredGUILRainMicrobe<- na.omit(GUILRainMicrobesDF)
View(GUILRainMicrobesDF)
summary(RainMicrobesDF)
View(filteredCUPERainMicrobe)
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= dailyRain, y= log10Abundance))+
geom_point()
CUPEDailylogAb_corr
CUPEmonthyears <-ggplot(data= CUPEdaily, aes(x=date, y= dailyRain))+
geom_line()+
scale_x_date(limits = start.end,
date_breaks= "1 month",
date_labels="%b-%Y"
) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "CUPE Precipitation")+
theme(plot.title = element_text(hjust =0.5))
CUPEmonthyears
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= log10(dailyRain), y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = 'y~x')
CUPEDailylogAb_corr<- filteredCUPERainMicrobe %>%
ggplot(aes(x= log10(dailyRain), y= log10Abundance))+
geom_point()
CUPEDailylogAb_corr
#remove outliers
GUILnoOut<- filteredGUILRainMicrobe[filteredGUILRainMicrobe<10]
#remove outliers
GUILnoOut<- filteredGUILRainMicrobe[filteredGUILRainMicrobe<10,]
rmOutlier.DMS<-dsc.combo.all[dsc.combo.all$microAbMl<400000,]
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
a<-fit$coefficients[1]
b<-fit$coefficients[2]
p1<- ggplot(data =rmOutlier.DMS, aes (x= finalDischarge, y = microAbMl)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')
streamFlow<- dsc$dsc_fieldData
library(tidyverse)
library(ggplot2)
library(neonUtilities)
library(tidyr)
library(dplyr)
library(lubridate)
library(stringr)
library(stats)
library(neonOS)
library(plotly)
library(neonOS)
library(gridExtra)
dsc<-loadByProduct(dpID = "DP1.20048.001", site=c("CUPE", "GUIL"),
startdate="2017-01", enddate="2023-04",
package= 'expanded', check.size=F, release = 'current')
streamFlow<- dsc$dsc_fieldData
short.dsc<- streamFlow%>%
select(siteID, collectDate, streamStage, finalDischarge)
short.dsc$Date<- as.Date((short.dsc$collectDate), format ="%d-%b-%Y")
#short.dsc<-subset(short.dsc, select = -c(date))
#merge swc.microbes with dsc
dsc.swc.mic<- merge(swc.microbes, short.dsc, by = "Date", all.x =TRUE)
View(swc.microbes)
View(swc.microbes)
##renaming the date to Date to merge by this column with discharge data
swc.microbes <-rename(swc.microbes,  Date = date )
View(swc.microbes)
swc.microbes<- swc.microbes %>%
mutate(log10analyte= log10(analyteConcentration))
str(swc.microbes)
View(swc.microbes)
#short.dsc<-subset(short.dsc, select = -c(date))
#merge swc.microbes with dsc
dsc.swc.mic<- merge(swc.microbes, short.dsc, by = "Date", all.x =TRUE)
dsc.combo.all<- dsc.swc.mic %>% drop_na(finalDischarge)
View(dsc.combo.all)
swc.tn.mic<-swc.microbes[swc.microbes$analyte=='TN',]
swc.toc.mic<-swc.microbes[swc.microbes$analyte=='TOC',]
swc.tp.mic<-swc.microbes[swc.microbes$analyte=='TP',]
swc.spc.mic<-swc.microbes[swc.microbes$analyte=='specificConductance',]
swc.plot.mic<-swc.microbes[swc.microbes$analyte %in% c('TN','TP', 'specificConductance', 'TSS'),]
swc.tss.mic<-swc.microbes[swc.microbes$analyte=='TSS',]
save.image("~/Github/Mvviggi/swc.cell.dsc/swc.mic.dsc.2024.RData")
View(swc.tn)
View(swc.tn.mic)
sum(is.na(swc.tn.mic))
#plotting microbes and TN
swc.tn.mic<- swc.tn.mic%>% drop_na(analyteConcentration)
LogTNmicrobePlot<-swc.tn.mic %>%
ggplot(aes(x= log10analyte, y=log10Abundance))+
geom_line(color="blue")+
scale_x_date(date_breaks= "1 month",
date_labels="%b-%Y") +
theme(axis.text.x = element_text(angle = 60, hjust = 1, size= 12),
axis.text.y = element_text(size= 12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))+
labs(title = "Microbial abundance and TN  over time")+
theme(plot.title = element_text(hjust =0.5))+
facet_wrap(~siteID.x, ncol= 1, scale="free")
LogTNmicrobePlot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance, color= Year, group = Year))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID, scale = "free")
TNlinerPlot
TNlinerPlot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance, color= Year, group = Year))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x, scale = "free")
TNlinerPlot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x, scale = "free")
TNlinerPlot
View(dsc.combo.all)
#run linear regression - log10 transform x and y
rmOutlier.DMS<-dsc.combo.all[dsc.combo.all$microAbMl<400000,]
View(rmOutlier.DMS)
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
a<-fit$coefficients[1]
b<-fit$coefficients[2]
p1<- ggplot(data =rmOutlier.DMS, aes (x= finalDischarge, y = microAbMl)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
p1
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
View(lm_eqn)
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
View(lm_eqn)
View(lm_eqn)
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(microAbMl) == a + b %.% italic(finalDischarge)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
a<-fit$coefficients[1]
b<-fit$coefficients[2]
p1<- ggplot(data =rmOutlier.DMS, aes (x= finalDischarge, y = microAbMl)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
p1
#linear regression equation code
lm_eqn <- function(rmOutlier.DMS){
m <- lm(y ~ x, rmOutlier.DMS);
eq <- substitute(italic(microAbMl) == a + b %.% italic(finalDischarge)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
pR <- p1 + geom_text(x = 25, y = 300, label = lm_eqn(rmOutlier.DMS), parse = TRUE)
dsc.combo.all<- dsc.combo.all %>%
mutate(logDischarge = log10(finalDischarge))
View(dsc.combo.all)
LogDSCmic<- dsc.combo.all %>%
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
LogDSCmic
p1
ogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)
LogDSCmic
LogDSCmic<-
ggplot(data =dsc.combo.all, aes (x= logDischarge, y = log10Abundance)) +
geom_point(color = 'blue',
size = 1.5,
shape = 'square'
)+
#stat_function(fun=function(x) 10^(a+b*log10(x)),col='red')+
facet_wrap(~siteID.x , scale= "free")
LogDSCmic
CUPEMxPplot +
geom_line(aes(y= dailyRain), color = "red")+
geom_point()+
scale_y_continuous(breaks = seq(0,8,1),
name="Microbial Abundance per mL",
sec.axis = sec_axis( trans = ~. /2,
breaks = seq(0,60,10),
name = "Precipitation (mm)"
)
) +
theme(axis.title.y.left = element_text(color= "blue"),
axis.title.y.right = element_text(color= "red"))
fit<-lm(log10(filteredGUILRainMicrobe$dailyRain)~log10(filteredGUILRainMicrobe$microAbMl))
CUPEplot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x)
TNlinerPlot
TNlinerPlot<- swc.tn.mic %>%
ggplot(aes(x=log10analyte, y= log10Abundance))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x)+
facet_wrap(~siteID.x, scale = "free")
TNlinerPlot
View(dsc.combo.all)
View(ShortAbundanceDF)
View(short.dsc)
short.dsc$date<- as.Date((short.dsc$collectDate), format ="%d-%b-%Y")
#create df only of discharge and microbes.
dsc.microbes<- merge(ShortAbundanceDF, short.dsc, by= date , all =TRUE)
#create df only of discharge and microbes.
dsc.microbes<- left_join(ShortAbundanceDF, short.dsc, by= date )
#create df only of discharge and microbes.
dsc.microbes<- left_join(ShortAbundanceDF, short.dsc, by= "date" )
View(dsc.microbes)
#create df only of discharge and microbes.
dsc.microbes<- inner.join(ShortAbundanceDF, short.dsc, by= "date" )
#create df only of discharge and microbes.
dsc.microbes<- merge(ShortAbundanceDF, short.dsc, by= "date" )
View(dsc.microbes)
plot(microAbMl~finalDischarge, data= dsc.microbes, pch=16)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<3000000,]
lm(microAbMl~finalDischarge, data= dsc.microbes)
mod<- lm(microAbMl~finalDischarge, data= dsc.microbes)
summary(mod)
fit<-lm(log10(dsc.combo.all$microAbMl)~log10(dsc.combo.all$finalDischarge))
summary(fit)
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= dsc.microbes, pch=16)
abline(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<2000000,]
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<2000000,]
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<20000,]
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
rmOutlier.dscmic<-dsc.microbes[dsc.microbes$microAbMl<200000,]
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
mod<- lm(microAbMl~finalDischarge, data= rmOutlier.dscmic)
summary(mod)
plot(microAbMl~finalDischarge, data= rmOutlier.dscmic, pch=16)
abline(mod)
